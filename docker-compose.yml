version: "3"
# Two containers: one running PostgreSQL, within db and the other our Django web server.
services:
    # For the django local server
    web:
        build: .
        # command: python /code/manage.py runserver 0.0.0.0:8000
        # To use gunicorn instead of the local server.
        command: gunicorn config.wsgi -b 0.0.0.0:8000

        volumes: 
            - .:/code
        ports:
            - 8000:8000
        # Our web service depends on the database to run. This means that db will be started up before web.
        depends_on:
            - db
        environment:
            # Two-step process to switching over to environment variables:
            # 1) add the environment variable to the docker-compolse.yml file
            # 2) update config/settings.py to point to the variable.
            - "DJANGO_SECRET_KEY=bue#q2u1x_no)9(rr^eq*lnxc*9br#o&(-rxmd&2dh#_z3ckex"
            - "DJANGO_DEBUG=True"
            - "DJANGO_SECURE_SSL_REDIRECT=False"
            - "DJANGO_SECURE_HSTS_SECONDS=0"
            - "DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS=False"
            - "DJANGO_SECURE_HSTS_PRELOAD=False"
            - "DJANGO_SESSION_COOKIE_SECURE=False"
            - "DJANGO_CSRF_COOKIE_SECURE=False"



    # For the PostgreSQL database.
    db:
        image: postgres:11
        volumes:
            # Careful - not whitespace after postgres_data:
            - postgres_data:/var/lib/postgresql/data/
        environment: 
            # It allows us to connect without a password. This is a convenience for local development.
            - "POSTGRES_HOST_AUTH_METHOD=trust"
volumes:
    postgres_data: